{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/BigGrade-Main-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Base44 Client Configuration\n// Complete implementation with authentication and entity management\nconst BASE44_CONFIG={apiUrl:'https://app.base44.com/api/apps/68f3aa9b3f0b7e0b3370d6fc',apiKey:'25a08cae07624f7b977e48d02f684891',appId:'68f3aa9b3f0b7e0b3370d6fc'};// Base44 API helper functions\nconst base44Api={async request(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';let data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;const url=\"\".concat(BASE44_CONFIG.apiUrl,\"/\").concat(endpoint);const options={method,headers:{'api_key':BASE44_CONFIG.apiKey,'Content-Type':'application/json'}};if(data&&(method==='POST'||method==='PUT')){options.body=JSON.stringify(data);}try{const response=await fetch(url,options);if(!response.ok){const errorText=await response.text();console.error(\"API Error \".concat(response.status,\":\"),errorText);throw new Error(\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error('Base44 API error:',error);throw error;}},async getEntities(entityType){let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let url=\"entities/\".concat(entityType);const params=new URLSearchParams(filters);if(params.toString()){url+='?'+params.toString();}return this.request(url);},async getEntity(entityType,entityId){return this.request(\"entities/\".concat(entityType,\"/\").concat(entityId));},async createEntity(entityType,data){return this.request(\"entities/\".concat(entityType),'POST',data);},async updateEntity(entityType,entityId,data){return this.request(\"entities/\".concat(entityType,\"/\").concat(entityId),'PUT',data);},async deleteEntity(entityType,entityId){return this.request(\"entities/\".concat(entityType,\"/\").concat(entityId),'DELETE');}};// Entity type mapping\nconst entityMapping={'messages':'ChatMessage','globalMessages':'GlobalChatMessage','gigs':'TutorListing','requests':'MarketplaceRequest','users':'PublicUserDirectory','threads':'Megathread','news':'NewsPost','chats':'SessionChat','notifications':'SessionNotification','endorsements':'StudentEndorsement','replies':'ThreadReply','vouches':'Vouch'};// Authentication manager\nconst auth={currentUser:null,getCurrentUser(){if(this.currentUser)return this.currentUser;const stored=localStorage.getItem('biggrade_user');if(stored){try{this.currentUser=JSON.parse(stored);return this.currentUser;}catch(e){localStorage.removeItem('biggrade_user');}}return null;},setCurrentUser(user){this.currentUser=user;localStorage.setItem('biggrade_user',JSON.stringify(user));},async signIn(email,displayName){let userType=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'student';try{const userId='user_'+btoa(email).replace(/[^a-zA-Z0-9]/g,'').substring(0,16);const authUser={uid:userId,email:email,displayName:displayName||email.split('@')[0],photoURL:null,userType:userType// 'student' or 'tutor'\n};this.setCurrentUser(authUser);return authUser;}catch(error){console.error('Sign in error:',error);throw error;}},signOut(){this.currentUser=null;localStorage.removeItem('biggrade_user');}};// Entity class for Base44-like API\nclass EntityCollection{constructor(entityType){this.entityType=entityType;this.subscribers=new Map();}async filter(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let sortField=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let limitCount=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{const entities=await base44Api.getEntities(this.entityType,filters);let results=Array.isArray(entities)?entities:[];// Sort if specified\nif(sortField){const isDescending=sortField.startsWith('-');const field=isDescending?sortField.substring(1):sortField;results.sort((a,b)=>{const aVal=a[field];const bVal=b[field];const comparison=aVal>bVal?1:aVal<bVal?-1:0;return isDescending?-comparison:comparison;});}// Limit if specified\nif(limitCount){results=results.slice(0,limitCount);}return results;}catch(error){console.error(\"Error filtering \".concat(this.entityType,\":\"),error);return[];}}async get(entityId){try{return await base44Api.getEntity(this.entityType,entityId);}catch(error){console.error(\"Error getting \".concat(this.entityType,\":\"),error);return null;}}async create(data){try{const entityData=_objectSpread(_objectSpread({},data),{},{created_date:data.created_date||new Date().toISOString(),updated_date:new Date().toISOString()});return await base44Api.createEntity(this.entityType,entityData);}catch(error){console.error(\"Error creating \".concat(this.entityType,\":\"),error);throw error;}}async update(entityId,data){try{const updateData=_objectSpread(_objectSpread({},data),{},{updated_date:new Date().toISOString()});return await base44Api.updateEntity(this.entityType,entityId,updateData);}catch(error){console.error(\"Error updating \".concat(this.entityType,\":\"),error);throw error;}}async delete(entityId){try{return await base44Api.deleteEntity(this.entityType,entityId);}catch(error){console.error(\"Error deleting \".concat(this.entityType,\":\"),error);throw error;}}// Simulate real-time subscription with polling\nsubscribe(filters,callback){let pollInterval=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5000;const subscriptionId=Math.random().toString(36).substring(7);let isActive=true;const poll=async()=>{if(!isActive)return;try{const results=await this.filter(filters);if(isActive){callback(results);}}catch(error){console.error(\"Subscription error for \".concat(this.entityType,\":\"),error);}if(isActive){setTimeout(poll,pollInterval);}};// Initial fetch\npoll();// Return unsubscribe function\nreturn()=>{isActive=false;this.subscribers.delete(subscriptionId);};}}// Main base44 export with all entity collections\nexport const base44={// Authentication\nauth(){return auth.getCurrentUser();},signIn(email,displayName,userType){return auth.signIn(email,displayName,userType);},signOut(){auth.signOut();},// Entity collections (Base44-like API)\nChatMessage:new EntityCollection('ChatMessage'),GlobalChatMessage:new EntityCollection('GlobalChatMessage'),TutorListing:new EntityCollection('TutorListing'),MarketplaceRequest:new EntityCollection('MarketplaceRequest'),PublicUserDirectory:new EntityCollection('PublicUserDirectory'),Megathread:new EntityCollection('Megathread'),NewsPost:new EntityCollection('NewsPost'),SessionChat:new EntityCollection('SessionChat'),SessionNotification:new EntityCollection('SessionNotification'),StudentEndorsement:new EntityCollection('StudentEndorsement'),ThreadReply:new EntityCollection('ThreadReply'),Vouch:new EntityCollection('Vouch'),// Legacy database operations for compatibility\nasync find(collectionName){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const entityType=entityMapping[collectionName]||collectionName;const collection=new EntityCollection(entityType);return collection.filter(options.where?options.where[0]:{});},async findOne(collectionName,field,value){const results=await this.find(collectionName,{where:[{field,value}]});return results.length>0?results[0]:null;},async findById(collectionName,id){const entityType=entityMapping[collectionName]||collectionName;const collection=new EntityCollection(entityType);return collection.get(id);},async create(collectionName,data){const entityType=entityMapping[collectionName]||collectionName;const collection=new EntityCollection(entityType);return collection.create(data);},async update(collectionName,id,data){const entityType=entityMapping[collectionName]||collectionName;const collection=new EntityCollection(entityType);return collection.update(id,data);},async delete(collectionName,id){const entityType=entityMapping[collectionName]||collectionName;const collection=new EntityCollection(entityType);return collection.delete(id);}};// Export configuration\nexport{BASE44_CONFIG,base44Api};export default base44;","map":{"version":3,"names":["BASE44_CONFIG","apiUrl","apiKey","appId","base44Api","request","endpoint","method","arguments","length","undefined","data","url","concat","options","headers","body","JSON","stringify","response","fetch","ok","errorText","text","console","error","status","Error","json","getEntities","entityType","filters","params","URLSearchParams","toString","getEntity","entityId","createEntity","updateEntity","deleteEntity","entityMapping","auth","currentUser","getCurrentUser","stored","localStorage","getItem","parse","e","removeItem","setCurrentUser","user","setItem","signIn","email","displayName","userType","userId","btoa","replace","substring","authUser","uid","split","photoURL","signOut","EntityCollection","constructor","subscribers","Map","filter","sortField","limitCount","entities","results","Array","isArray","isDescending","startsWith","field","sort","a","b","aVal","bVal","comparison","slice","get","create","entityData","_objectSpread","created_date","Date","toISOString","updated_date","update","updateData","delete","subscribe","callback","pollInterval","subscriptionId","Math","random","isActive","poll","setTimeout","base44","ChatMessage","GlobalChatMessage","TutorListing","MarketplaceRequest","PublicUserDirectory","Megathread","NewsPost","SessionChat","SessionNotification","StudentEndorsement","ThreadReply","Vouch","find","collectionName","collection","where","findOne","value","findById","id"],"sources":["/home/ubuntu/BigGrade-Main-files/src/base44Client.js"],"sourcesContent":["// Base44 Client Configuration\n// Complete implementation with authentication and entity management\n\nconst BASE44_CONFIG = {\n  apiUrl: 'https://app.base44.com/api/apps/68f3aa9b3f0b7e0b3370d6fc',\n  apiKey: '25a08cae07624f7b977e48d02f684891',\n  appId: '68f3aa9b3f0b7e0b3370d6fc'\n};\n\n// Base44 API helper functions\nconst base44Api = {\n  async request(endpoint, method = 'GET', data = null) {\n    const url = `${BASE44_CONFIG.apiUrl}/${endpoint}`;\n    const options = {\n      method,\n      headers: {\n        'api_key': BASE44_CONFIG.apiKey,\n        'Content-Type': 'application/json'\n      }\n    };\n\n    if (data && (method === 'POST' || method === 'PUT')) {\n      options.body = JSON.stringify(data);\n    }\n\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`API Error ${response.status}:`, errorText);\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Base44 API error:', error);\n      throw error;\n    }\n  },\n\n  async getEntities(entityType, filters = {}) {\n    let url = `entities/${entityType}`;\n    const params = new URLSearchParams(filters);\n    if (params.toString()) {\n      url += '?' + params.toString();\n    }\n    return this.request(url);\n  },\n\n  async getEntity(entityType, entityId) {\n    return this.request(`entities/${entityType}/${entityId}`);\n  },\n\n  async createEntity(entityType, data) {\n    return this.request(`entities/${entityType}`, 'POST', data);\n  },\n\n  async updateEntity(entityType, entityId, data) {\n    return this.request(`entities/${entityType}/${entityId}`, 'PUT', data);\n  },\n\n  async deleteEntity(entityType, entityId) {\n    return this.request(`entities/${entityType}/${entityId}`, 'DELETE');\n  }\n};\n\n// Entity type mapping\nconst entityMapping = {\n  'messages': 'ChatMessage',\n  'globalMessages': 'GlobalChatMessage',\n  'gigs': 'TutorListing',\n  'requests': 'MarketplaceRequest',\n  'users': 'PublicUserDirectory',\n  'threads': 'Megathread',\n  'news': 'NewsPost',\n  'chats': 'SessionChat',\n  'notifications': 'SessionNotification',\n  'endorsements': 'StudentEndorsement',\n  'replies': 'ThreadReply',\n  'vouches': 'Vouch'\n};\n\n// Authentication manager\nconst auth = {\n  currentUser: null,\n  \n  getCurrentUser() {\n    if (this.currentUser) return this.currentUser;\n    \n    const stored = localStorage.getItem('biggrade_user');\n    if (stored) {\n      try {\n        this.currentUser = JSON.parse(stored);\n        return this.currentUser;\n      } catch (e) {\n        localStorage.removeItem('biggrade_user');\n      }\n    }\n    return null;\n  },\n  \n  setCurrentUser(user) {\n    this.currentUser = user;\n    localStorage.setItem('biggrade_user', JSON.stringify(user));\n  },\n  \n  async signIn(email, displayName, userType = 'student') {\n    try {\n      const userId = 'user_' + btoa(email).replace(/[^a-zA-Z0-9]/g, '').substring(0, 16);\n      \n      const authUser = {\n        uid: userId,\n        email: email,\n        displayName: displayName || email.split('@')[0],\n        photoURL: null,\n        userType: userType // 'student' or 'tutor'\n      };\n      \n      this.setCurrentUser(authUser);\n      return authUser;\n    } catch (error) {\n      console.error('Sign in error:', error);\n      throw error;\n    }\n  },\n  \n  signOut() {\n    this.currentUser = null;\n    localStorage.removeItem('biggrade_user');\n  }\n};\n\n// Entity class for Base44-like API\nclass EntityCollection {\n  constructor(entityType) {\n    this.entityType = entityType;\n    this.subscribers = new Map();\n  }\n\n  async filter(filters = {}, sortField = null, limitCount = null) {\n    try {\n      const entities = await base44Api.getEntities(this.entityType, filters);\n      let results = Array.isArray(entities) ? entities : [];\n      \n      // Sort if specified\n      if (sortField) {\n        const isDescending = sortField.startsWith('-');\n        const field = isDescending ? sortField.substring(1) : sortField;\n        results.sort((a, b) => {\n          const aVal = a[field];\n          const bVal = b[field];\n          const comparison = aVal > bVal ? 1 : aVal < bVal ? -1 : 0;\n          return isDescending ? -comparison : comparison;\n        });\n      }\n      \n      // Limit if specified\n      if (limitCount) {\n        results = results.slice(0, limitCount);\n      }\n      \n      return results;\n    } catch (error) {\n      console.error(`Error filtering ${this.entityType}:`, error);\n      return [];\n    }\n  }\n\n  async get(entityId) {\n    try {\n      return await base44Api.getEntity(this.entityType, entityId);\n    } catch (error) {\n      console.error(`Error getting ${this.entityType}:`, error);\n      return null;\n    }\n  }\n\n  async create(data) {\n    try {\n      const entityData = {\n        ...data,\n        created_date: data.created_date || new Date().toISOString(),\n        updated_date: new Date().toISOString()\n      };\n      return await base44Api.createEntity(this.entityType, entityData);\n    } catch (error) {\n      console.error(`Error creating ${this.entityType}:`, error);\n      throw error;\n    }\n  }\n\n  async update(entityId, data) {\n    try {\n      const updateData = {\n        ...data,\n        updated_date: new Date().toISOString()\n      };\n      return await base44Api.updateEntity(this.entityType, entityId, updateData);\n    } catch (error) {\n      console.error(`Error updating ${this.entityType}:`, error);\n      throw error;\n    }\n  }\n\n  async delete(entityId) {\n    try {\n      return await base44Api.deleteEntity(this.entityType, entityId);\n    } catch (error) {\n      console.error(`Error deleting ${this.entityType}:`, error);\n      throw error;\n    }\n  }\n\n  // Simulate real-time subscription with polling\n  subscribe(filters, callback, pollInterval = 5000) {\n    const subscriptionId = Math.random().toString(36).substring(7);\n    let isActive = true;\n    \n    const poll = async () => {\n      if (!isActive) return;\n      \n      try {\n        const results = await this.filter(filters);\n        if (isActive) {\n          callback(results);\n        }\n      } catch (error) {\n        console.error(`Subscription error for ${this.entityType}:`, error);\n      }\n      \n      if (isActive) {\n        setTimeout(poll, pollInterval);\n      }\n    };\n    \n    // Initial fetch\n    poll();\n    \n    // Return unsubscribe function\n    return () => {\n      isActive = false;\n      this.subscribers.delete(subscriptionId);\n    };\n  }\n}\n\n// Main base44 export with all entity collections\nexport const base44 = {\n  // Authentication\n  auth() {\n    return auth.getCurrentUser();\n  },\n  \n  signIn(email, displayName, userType) {\n    return auth.signIn(email, displayName, userType);\n  },\n  \n  signOut() {\n    auth.signOut();\n  },\n\n  // Entity collections (Base44-like API)\n  ChatMessage: new EntityCollection('ChatMessage'),\n  GlobalChatMessage: new EntityCollection('GlobalChatMessage'),\n  TutorListing: new EntityCollection('TutorListing'),\n  MarketplaceRequest: new EntityCollection('MarketplaceRequest'),\n  PublicUserDirectory: new EntityCollection('PublicUserDirectory'),\n  Megathread: new EntityCollection('Megathread'),\n  NewsPost: new EntityCollection('NewsPost'),\n  SessionChat: new EntityCollection('SessionChat'),\n  SessionNotification: new EntityCollection('SessionNotification'),\n  StudentEndorsement: new EntityCollection('StudentEndorsement'),\n  ThreadReply: new EntityCollection('ThreadReply'),\n  Vouch: new EntityCollection('Vouch'),\n\n  // Legacy database operations for compatibility\n  async find(collectionName, options = {}) {\n    const entityType = entityMapping[collectionName] || collectionName;\n    const collection = new EntityCollection(entityType);\n    return collection.filter(options.where ? options.where[0] : {});\n  },\n\n  async findOne(collectionName, field, value) {\n    const results = await this.find(collectionName, { where: [{ field, value }] });\n    return results.length > 0 ? results[0] : null;\n  },\n\n  async findById(collectionName, id) {\n    const entityType = entityMapping[collectionName] || collectionName;\n    const collection = new EntityCollection(entityType);\n    return collection.get(id);\n  },\n\n  async create(collectionName, data) {\n    const entityType = entityMapping[collectionName] || collectionName;\n    const collection = new EntityCollection(entityType);\n    return collection.create(data);\n  },\n\n  async update(collectionName, id, data) {\n    const entityType = entityMapping[collectionName] || collectionName;\n    const collection = new EntityCollection(entityType);\n    return collection.update(id, data);\n  },\n\n  async delete(collectionName, id) {\n    const entityType = entityMapping[collectionName] || collectionName;\n    const collection = new EntityCollection(entityType);\n    return collection.delete(id);\n  }\n};\n\n// Export configuration\nexport { BASE44_CONFIG, base44Api };\n\nexport default base44;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}