{"ast":null,"code":"import _objectSpread from\"/workspace/BigGrade-Main-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Firebase client to replace Base44 client\nimport{collection,doc,getDoc,getDocs,setDoc,addDoc,updateDoc,deleteDoc,query,where,orderBy,limit,onSnapshot}from\"firebase/firestore\";import{db,auth}from\"./config\";import{signInWithPopup,GoogleAuthProvider,signOut,onAuthStateChanged}from\"firebase/auth\";// Google Sign-In\nconst googleProvider=new GoogleAuthProvider();export const firebaseClient={// Authentication\nauth:{signInWithGoogle:()=>signInWithPopup(auth,googleProvider),signOut:()=>signOut(auth),onAuthStateChanged:callback=>onAuthStateChanged(auth,callback),getCurrentUser:()=>auth.currentUser},// Entities (replacing Base44 entities)\nentities:{// User operations\nUser:{get:async userId=>{const docRef=doc(db,\"users\",userId);const docSnap=await getDoc(docRef);return docSnap.exists()?_objectSpread({id:docSnap.id},docSnap.data()):null;},create:async userData=>{const user=auth.currentUser;if(!user)throw new Error(\"No authenticated user\");const docRef=doc(db,\"users\",user.uid);await setDoc(docRef,userData);return _objectSpread({id:user.uid},userData);},update:async(userId,userData)=>{const docRef=doc(db,\"users\",userId);await updateDoc(docRef,userData);return _objectSpread({id:userId},userData);},filter:async filters=>{// This is a simplified implementation\n// For complex filtering, you might need to use Firestore queries\nconst q=query(collection(db,\"users\"));const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));}},// Megathread operations\nMegathread:{get:async id=>{const docRef=doc(db,\"megathreads\",id);const docSnap=await getDoc(docRef);return docSnap.exists()?_objectSpread({id:docSnap.id},docSnap.data()):null;},create:async data=>{const docRef=await addDoc(collection(db,\"megathreads\"),data);return _objectSpread({id:docRef.id},data);},update:async(id,data)=>{const docRef=doc(db,\"megathreads\",id);await updateDoc(docRef,data);return _objectSpread({id},data);},delete:async id=>{const docRef=doc(db,\"megathreads\",id);await deleteDoc(docRef);},filter:async function(filters){let orderByField=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"-created_date\";let limitCount=arguments.length>2&&arguments[2]!==undefined?arguments[2]:50;let q=query(collection(db,\"megathreads\"));// Apply filters\nif(filters){Object.keys(filters).forEach(key=>{q=query(q,where(key,\"==\",filters[key]));});}// Apply ordering\nif(orderByField){const isDesc=orderByField.startsWith('-');const field=isDesc?orderByField.substring(1):orderByField;q=query(q,orderBy(field,isDesc?\"desc\":\"asc\"));}// Apply limit\nif(limitCount){q=query(q,limit(limitCount));}const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));},subscribe:(filters,callback)=>{let q=query(collection(db,\"megathreads\"));// Apply filters\nif(filters){Object.keys(filters).forEach(key=>{q=query(q,where(key,\"==\",filters[key]));});}// Apply ordering\nq=query(q,orderBy(\"created_date\",\"desc\"));return onSnapshot(q,querySnapshot=>{const data=querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));callback(data);});}},// MarketplaceRequest operations\nMarketplaceRequest:{get:async id=>{const docRef=doc(db,\"marketplaceRequests\",id);const docSnap=await getDoc(docRef);return docSnap.exists()?_objectSpread({id:docSnap.id},docSnap.data()):null;},create:async data=>{const docRef=await addDoc(collection(db,\"marketplaceRequests\"),data);return _objectSpread({id:docRef.id},data);},update:async(id,data)=>{const docRef=doc(db,\"marketplaceRequests\",id);await updateDoc(docRef,data);return _objectSpread({id},data);},filter:async function(filters){let orderByField=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"-created_date\";let limitCount=arguments.length>2&&arguments[2]!==undefined?arguments[2]:50;let q=query(collection(db,\"marketplaceRequests\"));// Apply filters\nif(filters){Object.keys(filters).forEach(key=>{q=query(q,where(key,\"==\",filters[key]));});}// Apply ordering\nif(orderByField){const isDesc=orderByField.startsWith('-');const field=isDesc?orderByField.substring(1):orderByField;q=query(q,orderBy(field,isDesc?\"desc\":\"asc\"));}// Apply limit\nif(limitCount){q=query(q,limit(limitCount));}const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));}},// TutorListing operations\nTutorListing:{get:async id=>{const docRef=doc(db,\"tutorListings\",id);const docSnap=await getDoc(docRef);return docSnap.exists()?_objectSpread({id:docSnap.id},docSnap.data()):null;},create:async data=>{const docRef=await addDoc(collection(db,\"tutorListings\"),data);return _objectSpread({id:docRef.id},data);},update:async(id,data)=>{const docRef=doc(db,\"tutorListings\",id);await updateDoc(docRef,data);return _objectSpread({id},data);},filter:async function(filters){let orderByField=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"-created_date\";let limitCount=arguments.length>2&&arguments[2]!==undefined?arguments[2]:50;let q=query(collection(db,\"tutorListings\"));// Apply filters\nif(filters){Object.keys(filters).forEach(key=>{q=query(q,where(key,\"==\",filters[key]));});}// Apply ordering\nif(orderByField){const isDesc=orderByField.startsWith('-');const field=isDesc?orderByField.substring(1):orderByField;q=query(q,orderBy(field,isDesc?\"desc\":\"asc\"));}// Apply limit\nif(limitCount){q=query(q,limit(limitCount));}const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));}},// Vouch operations\nVouch:{get:async id=>{const docRef=doc(db,\"vouches\",id);const docSnap=await getDoc(docRef);return docSnap.exists()?_objectSpread({id:docSnap.id},docSnap.data()):null;},create:async data=>{const docRef=await addDoc(collection(db,\"vouches\"),data);return _objectSpread({id:docRef.id},data);},filter:async filters=>{let q=query(collection(db,\"vouches\"));// Apply filters\nif(filters){Object.keys(filters).forEach(key=>{q=query(q,where(key,\"==\",filters[key]));});}const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));}},// ThreadReply operations\nThreadReply:{get:async id=>{const docRef=doc(db,\"threadReplies\",id);const docSnap=await getDoc(docRef);return docSnap.exists()?_objectSpread({id:docSnap.id},docSnap.data()):null;},create:async data=>{const docRef=await addDoc(collection(db,\"threadReplies\"),data);return _objectSpread({id:docRef.id},data);},filter:async function(filters){let orderByField=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"-created_date\";let limitCount=arguments.length>2&&arguments[2]!==undefined?arguments[2]:50;let q=query(collection(db,\"threadReplies\"));// Apply filters\nif(filters){Object.keys(filters).forEach(key=>{q=query(q,where(key,\"==\",filters[key]));});}// Apply ordering\nif(orderByField){const isDesc=orderByField.startsWith('-');const field=isDesc?orderByField.substring(1):orderByField;q=query(q,orderBy(field,isDesc?\"desc\":\"asc\"));}// Apply limit\nif(limitCount){q=query(q,limit(limitCount));}const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));},// Subscribe to real-time updates\nsubscribe:(filters,callback)=>{let q=query(collection(db,\"threadReplies\"));// Apply filters\nif(filters){Object.keys(filters).forEach(key=>{q=query(q,where(key,\"==\",filters[key]));});}// Apply ordering\nq=query(q,orderBy(\"created_date\",\"desc\"));return onSnapshot(q,querySnapshot=>{const data=querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));callback(data);});}}// Additional entities would follow the same pattern...\n// PublicUserDirectory, ChatMessage, GlobalChatMessage, etc.\n}};export default firebaseClient;","map":{"version":3,"names":["collection","doc","getDoc","getDocs","setDoc","addDoc","updateDoc","deleteDoc","query","where","orderBy","limit","onSnapshot","db","auth","signInWithPopup","GoogleAuthProvider","signOut","onAuthStateChanged","googleProvider","firebaseClient","signInWithGoogle","callback","getCurrentUser","currentUser","entities","User","get","userId","docRef","docSnap","exists","_objectSpread","id","data","create","userData","user","Error","uid","update","filter","filters","q","querySnapshot","docs","map","Megathread","delete","orderByField","arguments","length","undefined","limitCount","Object","keys","forEach","key","isDesc","startsWith","field","substring","subscribe","MarketplaceRequest","TutorListing","Vouch","ThreadReply"],"sources":["/workspace/BigGrade-Main-files/src/firebase/firebaseClient.js"],"sourcesContent":["// Firebase client to replace Base44 client\nimport { \n  collection, \n  doc, \n  getDoc, \n  getDocs, \n  setDoc, \n  addDoc, \n  updateDoc, \n  deleteDoc, \n  query, \n  where, \n  orderBy, \n  limit,\n  onSnapshot\n} from \"firebase/firestore\";\nimport { db, auth } from \"./config\";\nimport { \n  signInWithPopup, \n  GoogleAuthProvider, \n  signOut, \n  onAuthStateChanged \n} from \"firebase/auth\";\n\n// Google Sign-In\nconst googleProvider = new GoogleAuthProvider();\n\nexport const firebaseClient = {\n  // Authentication\n  auth: {\n    signInWithGoogle: () => signInWithPopup(auth, googleProvider),\n    signOut: () => signOut(auth),\n    onAuthStateChanged: (callback) => onAuthStateChanged(auth, callback),\n    getCurrentUser: () => auth.currentUser\n  },\n\n  // Entities (replacing Base44 entities)\n  entities: {\n    // User operations\n    User: {\n      get: async (userId) => {\n        const docRef = doc(db, \"users\", userId);\n        const docSnap = await getDoc(docRef);\n        return docSnap.exists() ? { id: docSnap.id, ...docSnap.data() } : null;\n      },\n      \n      create: async (userData) => {\n        const user = auth.currentUser;\n        if (!user) throw new Error(\"No authenticated user\");\n        \n        const docRef = doc(db, \"users\", user.uid);\n        await setDoc(docRef, userData);\n        return { id: user.uid, ...userData };\n      },\n      \n      update: async (userId, userData) => {\n        const docRef = doc(db, \"users\", userId);\n        await updateDoc(docRef, userData);\n        return { id: userId, ...userData };\n      },\n      \n      filter: async (filters) => {\n        // This is a simplified implementation\n        // For complex filtering, you might need to use Firestore queries\n        const q = query(collection(db, \"users\"));\n        const querySnapshot = await getDocs(q);\n        return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      }\n    },\n\n    // Megathread operations\n    Megathread: {\n      get: async (id) => {\n        const docRef = doc(db, \"megathreads\", id);\n        const docSnap = await getDoc(docRef);\n        return docSnap.exists() ? { id: docSnap.id, ...docSnap.data() } : null;\n      },\n      \n      create: async (data) => {\n        const docRef = await addDoc(collection(db, \"megathreads\"), data);\n        return { id: docRef.id, ...data };\n      },\n      \n      update: async (id, data) => {\n        const docRef = doc(db, \"megathreads\", id);\n        await updateDoc(docRef, data);\n        return { id, ...data };\n      },\n      \n      delete: async (id) => {\n        const docRef = doc(db, \"megathreads\", id);\n        await deleteDoc(docRef);\n      },\n      \n      filter: async (filters, orderByField = \"-created_date\", limitCount = 50) => {\n        let q = query(collection(db, \"megathreads\"));\n        \n        // Apply filters\n        if (filters) {\n          Object.keys(filters).forEach(key => {\n            q = query(q, where(key, \"==\", filters[key]));\n          });\n        }\n        \n        // Apply ordering\n        if (orderByField) {\n          const isDesc = orderByField.startsWith('-');\n          const field = isDesc ? orderByField.substring(1) : orderByField;\n          q = query(q, orderBy(field, isDesc ? \"desc\" : \"asc\"));\n        }\n        \n        // Apply limit\n        if (limitCount) {\n          q = query(q, limit(limitCount));\n        }\n        \n        const querySnapshot = await getDocs(q);\n        return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      },\n      \n      subscribe: (filters, callback) => {\n        let q = query(collection(db, \"megathreads\"));\n        \n        // Apply filters\n        if (filters) {\n          Object.keys(filters).forEach(key => {\n            q = query(q, where(key, \"==\", filters[key]));\n          });\n        }\n        \n        // Apply ordering\n        q = query(q, orderBy(\"created_date\", \"desc\"));\n        \n        return onSnapshot(q, (querySnapshot) => {\n          const data = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n          callback(data);\n        });\n      }\n    },\n\n    // MarketplaceRequest operations\n    MarketplaceRequest: {\n      get: async (id) => {\n        const docRef = doc(db, \"marketplaceRequests\", id);\n        const docSnap = await getDoc(docRef);\n        return docSnap.exists() ? { id: docSnap.id, ...docSnap.data() } : null;\n      },\n      \n      create: async (data) => {\n        const docRef = await addDoc(collection(db, \"marketplaceRequests\"), data);\n        return { id: docRef.id, ...data };\n      },\n      \n      update: async (id, data) => {\n        const docRef = doc(db, \"marketplaceRequests\", id);\n        await updateDoc(docRef, data);\n        return { id, ...data };\n      },\n      \n      filter: async (filters, orderByField = \"-created_date\", limitCount = 50) => {\n        let q = query(collection(db, \"marketplaceRequests\"));\n        \n        // Apply filters\n        if (filters) {\n          Object.keys(filters).forEach(key => {\n            q = query(q, where(key, \"==\", filters[key]));\n          });\n        }\n        \n        // Apply ordering\n        if (orderByField) {\n          const isDesc = orderByField.startsWith('-');\n          const field = isDesc ? orderByField.substring(1) : orderByField;\n          q = query(q, orderBy(field, isDesc ? \"desc\" : \"asc\"));\n        }\n        \n        // Apply limit\n        if (limitCount) {\n          q = query(q, limit(limitCount));\n        }\n        \n        const querySnapshot = await getDocs(q);\n        return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      }\n    },\n\n    // TutorListing operations\n    TutorListing: {\n      get: async (id) => {\n        const docRef = doc(db, \"tutorListings\", id);\n        const docSnap = await getDoc(docRef);\n        return docSnap.exists() ? { id: docSnap.id, ...docSnap.data() } : null;\n      },\n      \n      create: async (data) => {\n        const docRef = await addDoc(collection(db, \"tutorListings\"), data);\n        return { id: docRef.id, ...data };\n      },\n      \n      update: async (id, data) => {\n        const docRef = doc(db, \"tutorListings\", id);\n        await updateDoc(docRef, data);\n        return { id, ...data };\n      },\n      \n      filter: async (filters, orderByField = \"-created_date\", limitCount = 50) => {\n        let q = query(collection(db, \"tutorListings\"));\n        \n        // Apply filters\n        if (filters) {\n          Object.keys(filters).forEach(key => {\n            q = query(q, where(key, \"==\", filters[key]));\n          });\n        }\n        \n        // Apply ordering\n        if (orderByField) {\n          const isDesc = orderByField.startsWith('-');\n          const field = isDesc ? orderByField.substring(1) : orderByField;\n          q = query(q, orderBy(field, isDesc ? \"desc\" : \"asc\"));\n        }\n        \n        // Apply limit\n        if (limitCount) {\n          q = query(q, limit(limitCount));\n        }\n        \n        const querySnapshot = await getDocs(q);\n        return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      }\n    },\n\n    // Vouch operations\n    Vouch: {\n      get: async (id) => {\n        const docRef = doc(db, \"vouches\", id);\n        const docSnap = await getDoc(docRef);\n        return docSnap.exists() ? { id: docSnap.id, ...docSnap.data() } : null;\n      },\n      \n      create: async (data) => {\n        const docRef = await addDoc(collection(db, \"vouches\"), data);\n        return { id: docRef.id, ...data };\n      },\n      \n      filter: async (filters) => {\n        let q = query(collection(db, \"vouches\"));\n        \n        // Apply filters\n        if (filters) {\n          Object.keys(filters).forEach(key => {\n            q = query(q, where(key, \"==\", filters[key]));\n          });\n        }\n        \n        const querySnapshot = await getDocs(q);\n        return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      }\n    },\n\n    // ThreadReply operations\n    ThreadReply: {\n      get: async (id) => {\n        const docRef = doc(db, \"threadReplies\", id);\n        const docSnap = await getDoc(docRef);\n        return docSnap.exists() ? { id: docSnap.id, ...docSnap.data() } : null;\n      },\n      \n      create: async (data) => {\n        const docRef = await addDoc(collection(db, \"threadReplies\"), data);\n        return { id: docRef.id, ...data };\n      },\n      \n      filter: async (filters, orderByField = \"-created_date\", limitCount = 50) => {\n        let q = query(collection(db, \"threadReplies\"));\n        \n        // Apply filters\n        if (filters) {\n          Object.keys(filters).forEach(key => {\n            q = query(q, where(key, \"==\", filters[key]));\n          });\n        }\n        \n        // Apply ordering\n        if (orderByField) {\n          const isDesc = orderByField.startsWith('-');\n          const field = isDesc ? orderByField.substring(1) : orderByField;\n          q = query(q, orderBy(field, isDesc ? \"desc\" : \"asc\"));\n        }\n        \n        // Apply limit\n        if (limitCount) {\n          q = query(q, limit(limitCount));\n        }\n        \n        const querySnapshot = await getDocs(q);\n        return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      },\n      \n      // Subscribe to real-time updates\n      subscribe: (filters, callback) => {\n        let q = query(collection(db, \"threadReplies\"));\n        \n        // Apply filters\n        if (filters) {\n          Object.keys(filters).forEach(key => {\n            q = query(q, where(key, \"==\", filters[key]));\n          });\n        }\n        \n        // Apply ordering\n        q = query(q, orderBy(\"created_date\", \"desc\"));\n        \n        return onSnapshot(q, (querySnapshot) => {\n          const data = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n          callback(data);\n        });\n      }\n    },\n\n    // Additional entities would follow the same pattern...\n    // PublicUserDirectory, ChatMessage, GlobalChatMessage, etc.\n  }\n};\n\nexport default firebaseClient;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}