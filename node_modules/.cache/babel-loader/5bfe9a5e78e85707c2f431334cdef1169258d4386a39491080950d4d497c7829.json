{"ast":null,"code":"import _objectSpread from\"/workspace/BigGrade-Main-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Firebase Client Configuration\n// This replaces Base44 functionality for the BigGrade application\nimport{initializeApp}from'firebase/app';import{getAuth,signInAnonymously,onAuthStateChanged}from'firebase/auth';import{getFirestore,collection,doc,getDoc,getDocs,addDoc,updateDoc,deleteDoc,query,where,orderBy,limit}from'firebase/firestore';// Firebase configuration - these will be loaded from environment variables\nconst firebaseConfig={apiKey:process.env.REACT_APP_FIREBASE_API_KEY||import.meta.env.VITE_FIREBASE_API_KEY,authDomain:process.env.REACT_APP_FIREBASE_AUTH_DOMAIN||import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,projectId:process.env.REACT_APP_FIREBASE_PROJECT_ID||import.meta.env.VITE_FIREBASE_PROJECT_ID,storageBucket:process.env.REACT_APP_FIREBASE_STORAGE_BUCKET||import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,messagingSenderId:process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID||import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,appId:process.env.REACT_APP_FIREBASE_APP_ID||import.meta.env.VITE_FIREBASE_APP_ID};// Initialize Firebase\nlet app;let auth;let db;try{app=initializeApp(firebaseConfig);auth=getAuth(app);db=getFirestore(app);console.log('Firebase initialized successfully');}catch(error){console.error('Error initializing Firebase:',error);}// Base44 replacement functions\nexport const base44={// Authentication\nasync auth(){if(!auth){throw new Error('Firebase Auth not initialized');}return new Promise((resolve,reject)=>{const unsubscribe=onAuthStateChanged(auth,user=>{unsubscribe();if(user){resolve({uid:user.uid,isAuthenticated:true,email:user.email,displayName:user.displayName});}else{signInAnonymously(auth).then(userCredential=>{resolve({uid:userCredential.user.uid,isAuthenticated:true,isAnonymous:true});}).catch(reject);}});});},// Database operations\nasync find(collectionName){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(!db){throw new Error('Firebase Firestore not initialized');}const collectionRef=collection(db,collectionName);let q=collectionRef;if(options.where){options.where.forEach(condition=>{q=query(q,where(condition.field,condition.operator,condition.value));});}if(options.orderBy){q=query(q,orderBy(options.orderBy,options.order||'asc'));}if(options.limit){q=query(q,limit(options.limit));}const snapshot=await getDocs(q);return snapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));},async findOne(collectionName,field,value){const results=await this.find(collectionName,{where:[{field,operator:'==',value}]});return results.length>0?results[0]:null;},async findById(collectionName,id){if(!db){throw new Error('Firebase Firestore not initialized');}const docRef=doc(db,collectionName,id);const docSnap=await getDoc(docRef);if(docSnap.exists()){return _objectSpread({id:docSnap.id},docSnap.data());}return null;},async create(collectionName,data){if(!db){throw new Error('Firebase Firestore not initialized');}const collectionRef=collection(db,collectionName);const docRef=await addDoc(collectionRef,_objectSpread(_objectSpread({},data),{},{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}));return _objectSpread(_objectSpread({id:docRef.id},data),{},{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});},async update(collectionName,id,data){if(!db){throw new Error('Firebase Firestore not initialized');}const docRef=doc(db,collectionName,id);await updateDoc(docRef,_objectSpread(_objectSpread({},data),{},{updatedAt:new Date().toISOString()}));return _objectSpread(_objectSpread({id},data),{},{updatedAt:new Date().toISOString()});},async delete(collectionName,id){if(!db){throw new Error('Firebase Firestore not initialized');}const docRef=doc(db,collectionName,id);await deleteDoc(docRef);return{success:true,id};}};// Export Firebase instances for direct use if needed\nexport{app,auth,db};export default base44;","map":{"version":3,"names":["initializeApp","getAuth","signInAnonymously","onAuthStateChanged","getFirestore","collection","doc","getDoc","getDocs","addDoc","updateDoc","deleteDoc","query","where","orderBy","limit","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","import","meta","VITE_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","VITE_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","VITE_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","VITE_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","VITE_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","VITE_FIREBASE_APP_ID","app","auth","db","console","log","error","base44","Error","Promise","resolve","reject","unsubscribe","user","uid","isAuthenticated","email","displayName","then","userCredential","isAnonymous","catch","find","collectionName","options","arguments","length","undefined","collectionRef","q","forEach","condition","field","operator","value","order","snapshot","docs","map","_objectSpread","id","data","findOne","results","findById","docRef","docSnap","exists","create","createdAt","Date","toISOString","updatedAt","update","delete","success"],"sources":["/workspace/BigGrade-Main-files/src/firebaseClient.js"],"sourcesContent":["// Firebase Client Configuration\n// This replaces Base44 functionality for the BigGrade application\n\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, doc, getDoc, getDocs, addDoc, updateDoc, deleteDoc, query, where, orderBy, limit } from 'firebase/firestore';\n\n// Firebase configuration - these will be loaded from environment variables\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY || import.meta.env.VITE_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN || import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID || import.meta.env.VITE_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET || import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID || import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID || import.meta.env.VITE_FIREBASE_APP_ID\n};\n\n// Initialize Firebase\nlet app;\nlet auth;\nlet db;\n\ntry {\n  app = initializeApp(firebaseConfig);\n  auth = getAuth(app);\n  db = getFirestore(app);\n  console.log('Firebase initialized successfully');\n} catch (error) {\n  console.error('Error initializing Firebase:', error);\n}\n\n// Base44 replacement functions\nexport const base44 = {\n  // Authentication\n  async auth() {\n    if (!auth) {\n      throw new Error('Firebase Auth not initialized');\n    }\n    \n    return new Promise((resolve, reject) => {\n      const unsubscribe = onAuthStateChanged(auth, (user) => {\n        unsubscribe();\n        if (user) {\n          resolve({\n            uid: user.uid,\n            isAuthenticated: true,\n            email: user.email,\n            displayName: user.displayName\n          });\n        } else {\n          signInAnonymously(auth)\n            .then((userCredential) => {\n              resolve({\n                uid: userCredential.user.uid,\n                isAuthenticated: true,\n                isAnonymous: true\n              });\n            })\n            .catch(reject);\n        }\n      });\n    });\n  },\n\n  // Database operations\n  async find(collectionName, options = {}) {\n    if (!db) {\n      throw new Error('Firebase Firestore not initialized');\n    }\n\n    const collectionRef = collection(db, collectionName);\n    let q = collectionRef;\n\n    if (options.where) {\n      options.where.forEach(condition => {\n        q = query(q, where(condition.field, condition.operator, condition.value));\n      });\n    }\n\n    if (options.orderBy) {\n      q = query(q, orderBy(options.orderBy, options.order || 'asc'));\n    }\n\n    if (options.limit) {\n      q = query(q, limit(options.limit));\n    }\n\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  },\n\n  async findOne(collectionName, field, value) {\n    const results = await this.find(collectionName, { where: [{ field, operator: '==', value }] });\n    return results.length > 0 ? results[0] : null;\n  },\n\n  async findById(collectionName, id) {\n    if (!db) {\n      throw new Error('Firebase Firestore not initialized');\n    }\n\n    const docRef = doc(db, collectionName, id);\n    const docSnap = await getDoc(docRef);\n    \n    if (docSnap.exists()) {\n      return {\n        id: docSnap.id,\n        ...docSnap.data()\n      };\n    }\n    return null;\n  },\n\n  async create(collectionName, data) {\n    if (!db) {\n      throw new Error('Firebase Firestore not initialized');\n    }\n\n    const collectionRef = collection(db, collectionName);\n    const docRef = await addDoc(collectionRef, {\n      ...data,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    });\n\n    return {\n      id: docRef.id,\n      ...data,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n  },\n\n  async update(collectionName, id, data) {\n    if (!db) {\n      throw new Error('Firebase Firestore not initialized');\n    }\n\n    const docRef = doc(db, collectionName, id);\n    await updateDoc(docRef, {\n      ...data,\n      updatedAt: new Date().toISOString()\n    });\n\n    return {\n      id,\n      ...data,\n      updatedAt: new Date().toISOString()\n    };\n  },\n\n  async delete(collectionName, id) {\n    if (!db) {\n      throw new Error('Firebase Firestore not initialized');\n    }\n\n    const docRef = doc(db, collectionName, id);\n    await deleteDoc(docRef);\n    return { success: true, id };\n  }\n};\n\n// Export Firebase instances for direct use if needed\nexport { app, auth, db };\n\nexport default base44;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}