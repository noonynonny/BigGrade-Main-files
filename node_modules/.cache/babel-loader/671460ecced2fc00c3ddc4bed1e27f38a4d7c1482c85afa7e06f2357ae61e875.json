{"ast":null,"code":"// Utility functions to replace Base44 utils\nimport{base44}from\"./firebaseClient\";// Create page URL (simplified version)\nexport const createPageUrl=page=>{// In a Firebase/React Router setup, this would typically just be the page name\n// or you might want to implement your own routing logic\nif(page.includes('?')){const[pageName,queryParams]=page.split('?');return\"/\".concat(pageName,\"?\").concat(queryParams);}return\"/\".concat(page);};// Format date\nexport const formatDate=dateString=>{const options={year:'numeric',month:'short',day:'numeric'};return new Date(dateString).toLocaleDateString(undefined,options);};// Format time\nexport const formatTime=dateString=>{const options={hour:'2-digit',minute:'2-digit'};return new Date(dateString).toLocaleTimeString(undefined,options);};// Truncate text\nexport const truncateText=function(text){let maxLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:100;if(text.length<=maxLength)return text;return text.substr(0,maxLength)+'...';};// Generate random ID\nexport const generateId=()=>{return Math.random().toString(36).substr(2,9);};// Check if user is authenticated\nexport const isAuthenticated=()=>{// This would need to be implemented properly\nreturn true;};// Get current user\nexport const getCurrentUser=()=>{// This would need to be implemented properly\nreturn null;};","map":{"version":3,"names":["base44","createPageUrl","page","includes","pageName","queryParams","split","concat","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","formatTime","hour","minute","toLocaleTimeString","truncateText","text","maxLength","arguments","length","substr","generateId","Math","random","toString","isAuthenticated","getCurrentUser"],"sources":["/workspace/BigGrade-Main-files/src/utils.js"],"sourcesContent":["// Utility functions to replace Base44 utils\nimport { base44 } from \"./firebaseClient\";\n\n// Create page URL (simplified version)\nexport const createPageUrl = (page) => {\n  // In a Firebase/React Router setup, this would typically just be the page name\n  // or you might want to implement your own routing logic\n  if (page.includes('?')) {\n    const [pageName, queryParams] = page.split('?');\n    return `/${pageName}?${queryParams}`;\n  }\n  return `/${page}`;\n};\n\n// Format date\nexport const formatDate = (dateString) => {\n  const options = { year: 'numeric', month: 'short', day: 'numeric' };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\n// Format time\nexport const formatTime = (dateString) => {\n  const options = { hour: '2-digit', minute: '2-digit' };\n  return new Date(dateString).toLocaleTimeString(undefined, options);\n};\n\n// Truncate text\nexport const truncateText = (text, maxLength = 100) => {\n  if (text.length <= maxLength) return text;\n  return text.substr(0, maxLength) + '...';\n};\n\n// Generate random ID\nexport const generateId = () => {\n  return Math.random().toString(36).substr(2, 9);\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  // This would need to be implemented properly\n  return true;\n};\n\n// Get current user\nexport const getCurrentUser = () => {\n  // This would need to be implemented properly\n  return null;\n};"],"mappings":"AAAA;AACA,OAASA,MAAM,KAAQ,kBAAkB,CAEzC;AACA,MAAO,MAAM,CAAAC,aAAa,CAAIC,IAAI,EAAK,CACrC;AACA;AACA,GAAIA,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAE,CACtB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC,CAC/C,UAAAC,MAAA,CAAWH,QAAQ,MAAAG,MAAA,CAAIF,WAAW,EACpC,CACA,UAAAE,MAAA,CAAWL,IAAI,EACjB,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,UAAU,CAAIC,UAAU,EAAK,CACxC,KAAM,CAAAC,OAAO,CAAG,CAAEC,IAAI,CAAE,SAAS,CAAEC,KAAK,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAU,CAAC,CACnE,MAAO,IAAI,CAAAC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAACC,SAAS,CAAEN,OAAO,CAAC,CACpE,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,UAAU,CAAIR,UAAU,EAAK,CACxC,KAAM,CAAAC,OAAO,CAAG,CAAEQ,IAAI,CAAE,SAAS,CAAEC,MAAM,CAAE,SAAU,CAAC,CACtD,MAAO,IAAI,CAAAL,IAAI,CAACL,UAAU,CAAC,CAACW,kBAAkB,CAACJ,SAAS,CAAEN,OAAO,CAAC,CACpE,CAAC,CAED;AACA,MAAO,MAAM,CAAAW,YAAY,CAAG,QAAAA,CAACC,IAAI,CAAsB,IAApB,CAAAC,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAR,SAAA,CAAAQ,SAAA,IAAG,GAAG,CAChD,GAAIF,IAAI,CAACG,MAAM,EAAIF,SAAS,CAAE,MAAO,CAAAD,IAAI,CACzC,MAAO,CAAAA,IAAI,CAACI,MAAM,CAAC,CAAC,CAAEH,SAAS,CAAC,CAAG,KAAK,CAC1C,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,UAAU,CAAGA,CAAA,GAAM,CAC9B,MAAO,CAAAC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACJ,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAChD,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,eAAe,CAAGA,CAAA,GAAM,CACnC;AACA,MAAO,KAAI,CACb,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAClC;AACA,MAAO,KAAI,CACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}