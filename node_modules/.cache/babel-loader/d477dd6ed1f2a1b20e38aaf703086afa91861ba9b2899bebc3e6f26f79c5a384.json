{"ast":null,"code":"import React from\"react\";import{base44}from\"../firebaseClient\";import{useQuery}from\"@tanstack/react-query\";import{MessageSquare,Clock}from\"lucide-react\";import{Link}from\"react-router-dom\";import{createPageUrl}from\"../utils\";import{format}from\"date-fns\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChatList(){const{data:user}=useQuery({queryKey:['currentUser'],queryFn:async()=>{return new Promise(resolve=>{const unsubscribe=firebaseClient.auth.onAuthStateChanged(user=>{unsubscribe();resolve(user);});});},staleTime:Infinity});// Mock chat data - in a real app, this would come from Firestore\nconst mockChats=[{id:1,name:\"Study Group\",lastMessage:\"See you in the library at 3pm\",timestamp:new Date(Date.now()-3600000),unread:2,avatar:null},{id:2,name:\"Math Help\",lastMessage:\"Thanks for explaining that concept!\",timestamp:new Date(Date.now()-86400000),unread:0,avatar:null}];return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"md:flex md:items-center md:justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 min-w-0\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\",children:\"Your Chats\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 flex md:mt-0 md:ml-4\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"ml-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",children:\"New Chat\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow overflow-hidden sm:rounded-md\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"divide-y divide-gray-200\",children:mockChats.map(chat=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:createPageUrl(\"Chat?id=\".concat(chat.id)),className:\"block hover:bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center px-4 py-4 sm:px-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"min-w-0 flex-1 flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:chat.avatar?/*#__PURE__*/_jsx(\"img\",{className:\"h-12 w-12 rounded-full\",src:chat.avatar,alt:\"\"}):/*#__PURE__*/_jsx(\"div\",{className:\"h-12 w-12 rounded-full bg-indigo-100 flex items-center justify-center\",children:/*#__PURE__*/_jsx(MessageSquare,{className:\"h-6 w-6 text-indigo-600\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-indigo-600 truncate\",children:chat.name}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 flex items-center text-sm text-gray-500\",children:/*#__PURE__*/_jsx(\"span\",{className:\"truncate\",children:chat.lastMessage})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hidden md:block\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-900\",children:[\"Last active \",/*#__PURE__*/_jsx(\"time\",{dateTime:chat.timestamp.toISOString(),children:format(chat.timestamp,\"MMM d, h:mm a\")})]}),chat.unread>0&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 flex items-center text-sm text-gray-500\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\",children:[chat.unread,\" unread\"]})})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Clock,{className:\"h-5 w-5 text-gray-400\"})})]})})},chat.id))})})]});}","map":{"version":3,"names":["React","base44","useQuery","MessageSquare","Clock","Link","createPageUrl","format","jsx","_jsx","jsxs","_jsxs","ChatList","data","user","queryKey","queryFn","Promise","resolve","unsubscribe","firebaseClient","auth","onAuthStateChanged","staleTime","Infinity","mockChats","id","name","lastMessage","timestamp","Date","now","unread","avatar","className","children","type","map","chat","to","concat","src","alt","dateTime","toISOString"],"sources":["/home/ubuntu/BigGrade-Main-files/src/pages/ChatList.jsx"],"sourcesContent":["import React from \"react\";\nimport { base44 } from \"../firebaseClient\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { MessageSquare, Clock } from \"lucide-react\";\nimport { Link } from \"react-router-dom\";\nimport { createPageUrl } from \"../utils\";\nimport { format } from \"date-fns\";\n\nexport default function ChatList() {\n  const { data: user } = useQuery({\n    queryKey: ['currentUser'],\n    queryFn: async () => {\n      return new Promise((resolve) => {\n        const unsubscribe = firebaseClient.auth.onAuthStateChanged((user) => {\n          unsubscribe();\n          resolve(user);\n        });\n      });\n    },\n    staleTime: Infinity,\n  });\n\n  // Mock chat data - in a real app, this would come from Firestore\n  const mockChats = [\n    {\n      id: 1,\n      name: \"Study Group\",\n      lastMessage: \"See you in the library at 3pm\",\n      timestamp: new Date(Date.now() - 3600000),\n      unread: 2,\n      avatar: null\n    },\n    {\n      id: 2,\n      name: \"Math Help\",\n      lastMessage: \"Thanks for explaining that concept!\",\n      timestamp: new Date(Date.now() - 86400000),\n      unread: 0,\n      avatar: null\n    }\n  ];\n\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      <div className=\"md:flex md:items-center md:justify-between mb-6\">\n        <div className=\"flex-1 min-w-0\">\n          <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">\n            Your Chats\n          </h2>\n        </div>\n        <div className=\"mt-4 flex md:mt-0 md:ml-4\">\n          <button\n            type=\"button\"\n            className=\"ml-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            New Chat\n          </button>\n        </div>\n      </div>\n\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n        <ul className=\"divide-y divide-gray-200\">\n          {mockChats.map((chat) => (\n            <li key={chat.id}>\n              <Link to={createPageUrl(`Chat?id=${chat.id}`)} className=\"block hover:bg-gray-50\">\n                <div className=\"flex items-center px-4 py-4 sm:px-6\">\n                  <div className=\"min-w-0 flex-1 flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      {chat.avatar ? (\n                        <img className=\"h-12 w-12 rounded-full\" src={chat.avatar} alt=\"\" />\n                      ) : (\n                        <div className=\"h-12 w-12 rounded-full bg-indigo-100 flex items-center justify-center\">\n                          <MessageSquare className=\"h-6 w-6 text-indigo-600\" />\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4\">\n                      <div>\n                        <p className=\"text-sm font-medium text-indigo-600 truncate\">{chat.name}</p>\n                        <p className=\"mt-2 flex items-center text-sm text-gray-500\">\n                          <span className=\"truncate\">{chat.lastMessage}</span>\n                        </p>\n                      </div>\n                      <div className=\"hidden md:block\">\n                        <div>\n                          <p className=\"text-sm text-gray-900\">\n                            Last active <time dateTime={chat.timestamp.toISOString()}>{format(chat.timestamp, \"MMM d, h:mm a\")}</time>\n                          </p>\n                          {chat.unread > 0 && (\n                            <p className=\"mt-2 flex items-center text-sm text-gray-500\">\n                              <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n                                {chat.unread} unread\n                              </span>\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <Clock className=\"h-5 w-5 text-gray-400\" />\n                  </div>\n                </div>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}