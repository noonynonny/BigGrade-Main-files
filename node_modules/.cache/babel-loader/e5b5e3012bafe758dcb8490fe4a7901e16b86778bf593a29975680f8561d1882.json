{"ast":null,"code":"import _objectSpread from\"/workspace/BigGrade-Main-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Firebase Client Configuration\n// This replaces Base44 functionality for the BigGrade application\nimport{initializeApp}from'firebase/app';import{getAuth,signInAnonymously,onAuthStateChanged}from'firebase/auth';import{getFirestore,collection,doc,getDoc,getDocs,addDoc,updateDoc,deleteDoc,query,where,orderBy,limit}from'firebase/firestore';// Base44 API Configuration (from your API files)\nconst BASE44_CONFIG={apiUrl:'https://app.base44.com/api/apps/68f3aa9b3f0b7e0b3370d6fc',apiKey:'25a08cae07624f7b977e48d02f684891',appId:'68f3aa9b3f0b7e0b3370d6fc'};// Firebase configuration - handle both development and production environments\nconst getFirebaseConfig=()=>{// Try multiple environment variable sources\nconst getEnvVar=name=>{var _window$_env_,_process$env,_import$meta$env;return((_window$_env_=window._env_)===null||_window$_env_===void 0?void 0:_window$_env_[name])||((_process$env=process.env)===null||_process$env===void 0?void 0:_process$env[name])||((_import$meta$env=import.meta.env)===null||_import$meta$env===void 0?void 0:_import$meta$env[name])||window.localStorage.getItem(name)||null;};return{apiKey:getEnvVar('VITE_FIREBASE_API_KEY')||'demo-api-key',authDomain:getEnvVar('VITE_FIREBASE_AUTH_DOMAIN')||'demo-project.firebaseapp.com',projectId:getEnvVar('VITE_FIREBASE_PROJECT_ID')||'demo-project',storageBucket:getEnvVar('VITE_FIREBASE_STORAGE_BUCKET')||'demo-project.appspot.com',messagingSenderId:getEnvVar('VITE_FIREBASE_MESSAGING_SENDER_ID')||'123456789',appId:getEnvVar('VITE_FIREBASE_APP_ID')||'demo-app-id'};};// Initialize Firebase\nlet app;let auth;let db;try{const firebaseConfig=getFirebaseConfig();// Only initialize if we have a real project (not demo values)\nif(firebaseConfig.projectId!=='demo-project'){app=initializeApp(firebaseConfig);auth=getAuth(app);db=getFirestore(app);console.log('Firebase initialized successfully');}else{console.warn('Firebase not initialized - using demo configuration. Please set up environment variables.');}}catch(error){console.error('Error initializing Firebase:',error);}// Base44 API helper functions\nconst base44Api={// Make requests to Base44 API\nasync request(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';let data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;const url=\"\".concat(BASE44_CONFIG.apiUrl,\"/\").concat(endpoint);const options={method,headers:{'api_key':BASE44_CONFIG.apiKey,'Content-Type':'application/json'}};if(data&&(method==='POST'||method==='PUT')){options.body=JSON.stringify(data);}try{const response=await fetch(url,options);if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error('Base44 API error:',error);throw error;}},// Get entities\nasync getEntities(entityType){let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let url=\"entities/\".concat(entityType);const params=new URLSearchParams(filters);if(params.toString()){url+='?'+params.toString();}return this.request(url);},// Create entity\nasync createEntity(entityType,data){return this.request(\"entities/\".concat(entityType),'POST',data);},// Update entity\nasync updateEntity(entityType,entityId,data){return this.request(\"entities/\".concat(entityType,\"/\").concat(entityId),'PUT',data);},// Delete entity\nasync deleteEntity(entityType,entityId){return this.request(\"entities/\".concat(entityType,\"/\").concat(entityId),'DELETE');}};// Base44 replacement functions\nexport const base44={// Authentication (use Base44 or fallback)\nasync auth(){// For now, return a simple auth object\n// In production, this should integrate with your auth system\nreturn{uid:'anonymous-user-'+Math.random().toString(36).substr(2,9),isAuthenticated:true,email:'anonymous@example.com',displayName:'Anonymous User'};},// Database operations using Base44 API\nasync find(collectionName){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{// Map collection names to Base44 entity types\nconst entityMapping={'messages':'ChatMessage','gigs':'TutorListing','requests':'MarketplaceRequest','users':'PublicUserDirectory','threads':'Megathread','news':'NewsPost','chats':'SessionChat','notifications':'SessionNotification','endorsements':'StudentEndorsement','replies':'ThreadReply','vouches':'Vouch'};const entityType=entityMapping[collectionName]||collectionName;// Convert options to Base44 filters\nconst filters={};if(options.where&&options.where.length>0){options.where.forEach(condition=>{filters[condition.field]=condition.value;});}const entities=await base44Api.getEntities(entityType,filters);// Transform Base44 entities to our format\nreturn entities.map(entity=>_objectSpread({id:entity.id||Math.random().toString(36).substr(2,9)},entity));}catch(error){console.error('Find operation failed:',error);// Return empty array as fallback\nreturn[];}},async findOne(collectionName,field,value){const results=await this.find(collectionName,{where:[{field,operator:'==',value}]});return results.length>0?results[0]:null;},async findById(collectionName,id){try{const entityMapping={'messages':'ChatMessage','gigs':'TutorListing','requests':'MarketplaceRequest','users':'PublicUserDirectory','threads':'Megathread','news':'NewsPost','chats':'SessionChat','notifications':'SessionNotification','endorsements':'StudentEndorsement','replies':'ThreadReply','vouches':'Vouch'};const entityType=entityMapping[collectionName]||collectionName;const entity=await base44Api.request(\"entities/\".concat(entityType,\"/\").concat(id));return _objectSpread({id:entity.id},entity);}catch(error){console.error('FindById operation failed:',error);return null;}},async create(collectionName,data){try{const entityMapping={'messages':'ChatMessage','gigs':'TutorListing','requests':'MarketplaceRequest','users':'PublicUserDirectory','threads':'Megathread','news':'NewsPost','chats':'SessionChat','notifications':'SessionNotification','endorsements':'StudentEndorsement','replies':'ThreadReply','vouches':'Vouch'};const entityType=entityMapping[collectionName]||collectionName;// Add timestamps\nconst entityData=_objectSpread(_objectSpread({},data),{},{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});const entity=await base44Api.createEntity(entityType,entityData);return _objectSpread({id:entity.id||Math.random().toString(36).substr(2,9)},entityData);}catch(error){console.error('Create operation failed:',error);throw error;}},async update(collectionName,id,data){try{const entityMapping={'messages':'ChatMessage','gigs':'TutorListing','requests':'MarketplaceRequest','users':'PublicUserDirectory','threads':'Megathread','news':'NewsPost','chats':'SessionChat','notifications':'SessionNotification','endorsements':'StudentEndorsement','replies':'ThreadReply','vouches':'Vouch'};const entityType=entityMapping[collectionName]||collectionName;const updateData=_objectSpread(_objectSpread({},data),{},{updatedAt:new Date().toISOString()});await base44Api.updateEntity(entityType,id,updateData);return _objectSpread({id},updateData);}catch(error){console.error('Update operation failed:',error);throw error;}},async delete(collectionName,id){try{const entityMapping={'messages':'ChatMessage','gigs':'TutorListing','requests':'MarketplaceRequest','users':'PublicUserDirectory','threads':'Megathread','news':'NewsPost','chats':'SessionChat','notifications':'SessionNotification','endorsements':'StudentEndorsement','replies':'ThreadReply','vouches':'Vouch'};const entityType=entityMapping[collectionName]||collectionName;await base44Api.deleteEntity(entityType,id);return{success:true,id};}catch(error){console.error('Delete operation failed:',error);throw error;}}};// Export Base44 configuration for direct API access\nexport{BASE44_CONFIG,base44Api};// Export Firebase instances for direct use if needed\nexport{app,auth,db};export default base44;","map":{"version":3,"names":["initializeApp","getAuth","signInAnonymously","onAuthStateChanged","getFirestore","collection","doc","getDoc","getDocs","addDoc","updateDoc","deleteDoc","query","where","orderBy","limit","BASE44_CONFIG","apiUrl","apiKey","appId","getFirebaseConfig","getEnvVar","name","_window$_env_","_process$env","_import$meta$env","window","_env_","process","env","import","meta","localStorage","getItem","authDomain","projectId","storageBucket","messagingSenderId","app","auth","db","firebaseConfig","console","log","warn","error","base44Api","request","endpoint","method","arguments","length","undefined","data","url","concat","options","headers","body","JSON","stringify","response","fetch","ok","Error","status","json","getEntities","entityType","filters","params","URLSearchParams","toString","createEntity","updateEntity","entityId","deleteEntity","base44","uid","Math","random","substr","isAuthenticated","email","displayName","find","collectionName","entityMapping","forEach","condition","field","value","entities","map","entity","_objectSpread","id","findOne","results","operator","findById","create","entityData","createdAt","Date","toISOString","updatedAt","update","updateData","delete","success"],"sources":["/workspace/BigGrade-Main-files/src/firebaseClient.js"],"sourcesContent":["// Firebase Client Configuration\n// This replaces Base44 functionality for the BigGrade application\n\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, doc, getDoc, getDocs, addDoc, updateDoc, deleteDoc, query, where, orderBy, limit } from 'firebase/firestore';\n\n// Base44 API Configuration (from your API files)\nconst BASE44_CONFIG = {\n  apiUrl: 'https://app.base44.com/api/apps/68f3aa9b3f0b7e0b3370d6fc',\n  apiKey: '25a08cae07624f7b977e48d02f684891',\n  appId: '68f3aa9b3f0b7e0b3370d6fc'\n};\n\n// Firebase configuration - handle both development and production environments\nconst getFirebaseConfig = () => {\n  // Try multiple environment variable sources\n  const getEnvVar = (name) => {\n    return window._env_?.[name] || \n           process.env?.[name] || \n           import.meta.env?.[name] ||\n           window.localStorage.getItem(name) ||\n           null;\n  };\n\n  return {\n    apiKey: getEnvVar('VITE_FIREBASE_API_KEY') || 'demo-api-key',\n    authDomain: getEnvVar('VITE_FIREBASE_AUTH_DOMAIN') || 'demo-project.firebaseapp.com',\n    projectId: getEnvVar('VITE_FIREBASE_PROJECT_ID') || 'demo-project',\n    storageBucket: getEnvVar('VITE_FIREBASE_STORAGE_BUCKET') || 'demo-project.appspot.com',\n    messagingSenderId: getEnvVar('VITE_FIREBASE_MESSAGING_SENDER_ID') || '123456789',\n    appId: getEnvVar('VITE_FIREBASE_APP_ID') || 'demo-app-id'\n  };\n};\n\n// Initialize Firebase\nlet app;\nlet auth;\nlet db;\n\ntry {\n  const firebaseConfig = getFirebaseConfig();\n  \n  // Only initialize if we have a real project (not demo values)\n  if (firebaseConfig.projectId !== 'demo-project') {\n    app = initializeApp(firebaseConfig);\n    auth = getAuth(app);\n    db = getFirestore(app);\n    console.log('Firebase initialized successfully');\n  } else {\n    console.warn('Firebase not initialized - using demo configuration. Please set up environment variables.');\n  }\n} catch (error) {\n  console.error('Error initializing Firebase:', error);\n}\n\n// Base44 API helper functions\nconst base44Api = {\n  // Make requests to Base44 API\n  async request(endpoint, method = 'GET', data = null) {\n    const url = `${BASE44_CONFIG.apiUrl}/${endpoint}`;\n    const options = {\n      method,\n      headers: {\n        'api_key': BASE44_CONFIG.apiKey,\n        'Content-Type': 'application/json'\n      }\n    };\n\n    if (data && (method === 'POST' || method === 'PUT')) {\n      options.body = JSON.stringify(data);\n    }\n\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Base44 API error:', error);\n      throw error;\n    }\n  },\n\n  // Get entities\n  async getEntities(entityType, filters = {}) {\n    let url = `entities/${entityType}`;\n    const params = new URLSearchParams(filters);\n    if (params.toString()) {\n      url += '?' + params.toString();\n    }\n    return this.request(url);\n  },\n\n  // Create entity\n  async createEntity(entityType, data) {\n    return this.request(`entities/${entityType}`, 'POST', data);\n  },\n\n  // Update entity\n  async updateEntity(entityType, entityId, data) {\n    return this.request(`entities/${entityType}/${entityId}`, 'PUT', data);\n  },\n\n  // Delete entity\n  async deleteEntity(entityType, entityId) {\n    return this.request(`entities/${entityType}/${entityId}`, 'DELETE');\n  }\n};\n\n// Base44 replacement functions\nexport const base44 = {\n  // Authentication (use Base44 or fallback)\n  async auth() {\n    // For now, return a simple auth object\n    // In production, this should integrate with your auth system\n    return {\n      uid: 'anonymous-user-' + Math.random().toString(36).substr(2, 9),\n      isAuthenticated: true,\n      email: 'anonymous@example.com',\n      displayName: 'Anonymous User'\n    };\n  },\n\n  // Database operations using Base44 API\n  async find(collectionName, options = {}) {\n    try {\n      // Map collection names to Base44 entity types\n      const entityMapping = {\n        'messages': 'ChatMessage',\n        'gigs': 'TutorListing',\n        'requests': 'MarketplaceRequest',\n        'users': 'PublicUserDirectory',\n        'threads': 'Megathread',\n        'news': 'NewsPost',\n        'chats': 'SessionChat',\n        'notifications': 'SessionNotification',\n        'endorsements': 'StudentEndorsement',\n        'replies': 'ThreadReply',\n        'vouches': 'Vouch'\n      };\n\n      const entityType = entityMapping[collectionName] || collectionName;\n      \n      // Convert options to Base44 filters\n      const filters = {};\n      if (options.where && options.where.length > 0) {\n        options.where.forEach(condition => {\n          filters[condition.field] = condition.value;\n        });\n      }\n\n      const entities = await base44Api.getEntities(entityType, filters);\n      \n      // Transform Base44 entities to our format\n      return entities.map(entity => ({\n        id: entity.id || Math.random().toString(36).substr(2, 9),\n        ...entity\n      }));\n    } catch (error) {\n      console.error('Find operation failed:', error);\n      // Return empty array as fallback\n      return [];\n    }\n  },\n\n  async findOne(collectionName, field, value) {\n    const results = await this.find(collectionName, { where: [{ field, operator: '==', value }] });\n    return results.length > 0 ? results[0] : null;\n  },\n\n  async findById(collectionName, id) {\n    try {\n      const entityMapping = {\n        'messages': 'ChatMessage',\n        'gigs': 'TutorListing',\n        'requests': 'MarketplaceRequest',\n        'users': 'PublicUserDirectory',\n        'threads': 'Megathread',\n        'news': 'NewsPost',\n        'chats': 'SessionChat',\n        'notifications': 'SessionNotification',\n        'endorsements': 'StudentEndorsement',\n        'replies': 'ThreadReply',\n        'vouches': 'Vouch'\n      };\n\n      const entityType = entityMapping[collectionName] || collectionName;\n      const entity = await base44Api.request(`entities/${entityType}/${id}`);\n      \n      return {\n        id: entity.id,\n        ...entity\n      };\n    } catch (error) {\n      console.error('FindById operation failed:', error);\n      return null;\n    }\n  },\n\n  async create(collectionName, data) {\n    try {\n      const entityMapping = {\n        'messages': 'ChatMessage',\n        'gigs': 'TutorListing',\n        'requests': 'MarketplaceRequest',\n        'users': 'PublicUserDirectory',\n        'threads': 'Megathread',\n        'news': 'NewsPost',\n        'chats': 'SessionChat',\n        'notifications': 'SessionNotification',\n        'endorsements': 'StudentEndorsement',\n        'replies': 'ThreadReply',\n        'vouches': 'Vouch'\n      };\n\n      const entityType = entityMapping[collectionName] || collectionName;\n      \n      // Add timestamps\n      const entityData = {\n        ...data,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n\n      const entity = await base44Api.createEntity(entityType, entityData);\n      \n      return {\n        id: entity.id || Math.random().toString(36).substr(2, 9),\n        ...entityData\n      };\n    } catch (error) {\n      console.error('Create operation failed:', error);\n      throw error;\n    }\n  },\n\n  async update(collectionName, id, data) {\n    try {\n      const entityMapping = {\n        'messages': 'ChatMessage',\n        'gigs': 'TutorListing',\n        'requests': 'MarketplaceRequest',\n        'users': 'PublicUserDirectory',\n        'threads': 'Megathread',\n        'news': 'NewsPost',\n        'chats': 'SessionChat',\n        'notifications': 'SessionNotification',\n        'endorsements': 'StudentEndorsement',\n        'replies': 'ThreadReply',\n        'vouches': 'Vouch'\n      };\n\n      const entityType = entityMapping[collectionName] || collectionName;\n      \n      const updateData = {\n        ...data,\n        updatedAt: new Date().toISOString()\n      };\n\n      await base44Api.updateEntity(entityType, id, updateData);\n      \n      return {\n        id,\n        ...updateData\n      };\n    } catch (error) {\n      console.error('Update operation failed:', error);\n      throw error;\n    }\n  },\n\n  async delete(collectionName, id) {\n    try {\n      const entityMapping = {\n        'messages': 'ChatMessage',\n        'gigs': 'TutorListing',\n        'requests': 'MarketplaceRequest',\n        'users': 'PublicUserDirectory',\n        'threads': 'Megathread',\n        'news': 'NewsPost',\n        'chats': 'SessionChat',\n        'notifications': 'SessionNotification',\n        'endorsements': 'StudentEndorsement',\n        'replies': 'ThreadReply',\n        'vouches': 'Vouch'\n      };\n\n      const entityType = entityMapping[collectionName] || collectionName;\n      await base44Api.deleteEntity(entityType, id);\n      return { success: true, id };\n    } catch (error) {\n      console.error('Delete operation failed:', error);\n      throw error;\n    }\n  }\n};\n\n// Export Base44 configuration for direct API access\nexport { BASE44_CONFIG, base44Api };\n\n// Export Firebase instances for direct use if needed\nexport { app, auth, db };\n\nexport default base44;"],"mappings":"uJAAA;AACA;AAEA,OAASA,aAAa,KAAQ,cAAc,CAC5C,OAASC,OAAO,CAAEC,iBAAiB,CAAEC,kBAAkB,KAAQ,eAAe,CAC9E,OAASC,YAAY,CAAEC,UAAU,CAAEC,GAAG,CAAEC,MAAM,CAAEC,OAAO,CAAEC,MAAM,CAAEC,SAAS,CAAEC,SAAS,CAAEC,KAAK,CAAEC,KAAK,CAAEC,OAAO,CAAEC,KAAK,KAAQ,oBAAoB,CAE/I;AACA,KAAM,CAAAC,aAAa,CAAG,CACpBC,MAAM,CAAE,0DAA0D,CAClEC,MAAM,CAAE,kCAAkC,CAC1CC,KAAK,CAAE,0BACT,CAAC,CAED;AACA,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B;AACA,KAAM,CAAAC,SAAS,CAAIC,IAAI,EAAK,KAAAC,aAAA,CAAAC,YAAA,CAAAC,gBAAA,CAC1B,MAAO,EAAAF,aAAA,CAAAG,MAAM,CAACC,KAAK,UAAAJ,aAAA,iBAAZA,aAAA,CAAeD,IAAI,CAAC,KAAAE,YAAA,CACpBI,OAAO,CAACC,GAAG,UAAAL,YAAA,iBAAXA,YAAA,CAAcF,IAAI,CAAC,KAAAG,gBAAA,CACnBK,MAAM,CAACC,IAAI,CAACF,GAAG,UAAAJ,gBAAA,iBAAfA,gBAAA,CAAkBH,IAAI,CAAC,GACvBI,MAAM,CAACM,YAAY,CAACC,OAAO,CAACX,IAAI,CAAC,EACjC,IAAI,CACb,CAAC,CAED,MAAO,CACLJ,MAAM,CAAEG,SAAS,CAAC,uBAAuB,CAAC,EAAI,cAAc,CAC5Da,UAAU,CAAEb,SAAS,CAAC,2BAA2B,CAAC,EAAI,8BAA8B,CACpFc,SAAS,CAAEd,SAAS,CAAC,0BAA0B,CAAC,EAAI,cAAc,CAClEe,aAAa,CAAEf,SAAS,CAAC,8BAA8B,CAAC,EAAI,0BAA0B,CACtFgB,iBAAiB,CAAEhB,SAAS,CAAC,mCAAmC,CAAC,EAAI,WAAW,CAChFF,KAAK,CAAEE,SAAS,CAAC,sBAAsB,CAAC,EAAI,aAC9C,CAAC,CACH,CAAC,CAED;AACA,GAAI,CAAAiB,GAAG,CACP,GAAI,CAAAC,IAAI,CACR,GAAI,CAAAC,EAAE,CAEN,GAAI,CACF,KAAM,CAAAC,cAAc,CAAGrB,iBAAiB,CAAC,CAAC,CAE1C;AACA,GAAIqB,cAAc,CAACN,SAAS,GAAK,cAAc,CAAE,CAC/CG,GAAG,CAAGtC,aAAa,CAACyC,cAAc,CAAC,CACnCF,IAAI,CAAGtC,OAAO,CAACqC,GAAG,CAAC,CACnBE,EAAE,CAAGpC,YAAY,CAACkC,GAAG,CAAC,CACtBI,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAClD,CAAC,IAAM,CACLD,OAAO,CAACE,IAAI,CAAC,2FAA2F,CAAC,CAC3G,CACF,CAAE,MAAOC,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CAEA;AACA,KAAM,CAAAC,SAAS,CAAG,CAChB;AACA,KAAM,CAAAC,OAAOA,CAACC,QAAQ,CAA+B,IAA7B,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,IAAE,CAAAG,IAAI,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACjD,KAAM,CAAAI,GAAG,IAAAC,MAAA,CAAMvC,aAAa,CAACC,MAAM,MAAAsC,MAAA,CAAIP,QAAQ,CAAE,CACjD,KAAM,CAAAQ,OAAO,CAAG,CACdP,MAAM,CACNQ,OAAO,CAAE,CACP,SAAS,CAAEzC,aAAa,CAACE,MAAM,CAC/B,cAAc,CAAE,kBAClB,CACF,CAAC,CAED,GAAImC,IAAI,GAAKJ,MAAM,GAAK,MAAM,EAAIA,MAAM,GAAK,KAAK,CAAC,CAAE,CACnDO,OAAO,CAACE,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CACrC,CAEA,GAAI,CACF,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACR,GAAG,CAAEE,OAAO,CAAC,CAC1C,GAAI,CAACK,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,wBAAAT,MAAA,CAAwBM,QAAQ,CAACI,MAAM,CAAE,CAAC,CAC3D,CACA,MAAO,MAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOrB,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAsB,WAAWA,CAACC,UAAU,CAAgB,IAAd,CAAAC,OAAO,CAAAnB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACxC,GAAI,CAAAI,GAAG,aAAAC,MAAA,CAAea,UAAU,CAAE,CAClC,KAAM,CAAAE,MAAM,CAAG,GAAI,CAAAC,eAAe,CAACF,OAAO,CAAC,CAC3C,GAAIC,MAAM,CAACE,QAAQ,CAAC,CAAC,CAAE,CACrBlB,GAAG,EAAI,GAAG,CAAGgB,MAAM,CAACE,QAAQ,CAAC,CAAC,CAChC,CACA,MAAO,KAAI,CAACzB,OAAO,CAACO,GAAG,CAAC,CAC1B,CAAC,CAED;AACA,KAAM,CAAAmB,YAAYA,CAACL,UAAU,CAAEf,IAAI,CAAE,CACnC,MAAO,KAAI,CAACN,OAAO,aAAAQ,MAAA,CAAaa,UAAU,EAAI,MAAM,CAAEf,IAAI,CAAC,CAC7D,CAAC,CAED;AACA,KAAM,CAAAqB,YAAYA,CAACN,UAAU,CAAEO,QAAQ,CAAEtB,IAAI,CAAE,CAC7C,MAAO,KAAI,CAACN,OAAO,aAAAQ,MAAA,CAAaa,UAAU,MAAAb,MAAA,CAAIoB,QAAQ,EAAI,KAAK,CAAEtB,IAAI,CAAC,CACxE,CAAC,CAED;AACA,KAAM,CAAAuB,YAAYA,CAACR,UAAU,CAAEO,QAAQ,CAAE,CACvC,MAAO,KAAI,CAAC5B,OAAO,aAAAQ,MAAA,CAAaa,UAAU,MAAAb,MAAA,CAAIoB,QAAQ,EAAI,QAAQ,CAAC,CACrE,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,MAAM,CAAG,CACpB;AACA,KAAM,CAAAtC,IAAIA,CAAA,CAAG,CACX;AACA;AACA,MAAO,CACLuC,GAAG,CAAE,iBAAiB,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACR,QAAQ,CAAC,EAAE,CAAC,CAACS,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAChEC,eAAe,CAAE,IAAI,CACrBC,KAAK,CAAE,uBAAuB,CAC9BC,WAAW,CAAE,gBACf,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAC,IAAIA,CAACC,cAAc,CAAgB,IAAd,CAAA9B,OAAO,CAAAN,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACrC,GAAI,CACF;AACA,KAAM,CAAAqC,aAAa,CAAG,CACpB,UAAU,CAAE,aAAa,CACzB,MAAM,CAAE,cAAc,CACtB,UAAU,CAAE,oBAAoB,CAChC,OAAO,CAAE,qBAAqB,CAC9B,SAAS,CAAE,YAAY,CACvB,MAAM,CAAE,UAAU,CAClB,OAAO,CAAE,aAAa,CACtB,eAAe,CAAE,qBAAqB,CACtC,cAAc,CAAE,oBAAoB,CACpC,SAAS,CAAE,aAAa,CACxB,SAAS,CAAE,OACb,CAAC,CAED,KAAM,CAAAnB,UAAU,CAAGmB,aAAa,CAACD,cAAc,CAAC,EAAIA,cAAc,CAElE;AACA,KAAM,CAAAjB,OAAO,CAAG,CAAC,CAAC,CAClB,GAAIb,OAAO,CAAC3C,KAAK,EAAI2C,OAAO,CAAC3C,KAAK,CAACsC,MAAM,CAAG,CAAC,CAAE,CAC7CK,OAAO,CAAC3C,KAAK,CAAC2E,OAAO,CAACC,SAAS,EAAI,CACjCpB,OAAO,CAACoB,SAAS,CAACC,KAAK,CAAC,CAAGD,SAAS,CAACE,KAAK,CAC5C,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA9C,SAAS,CAACqB,WAAW,CAACC,UAAU,CAAEC,OAAO,CAAC,CAEjE;AACA,MAAO,CAAAuB,QAAQ,CAACC,GAAG,CAACC,MAAM,EAAAC,aAAA,EACxBC,EAAE,CAAEF,MAAM,CAACE,EAAE,EAAIjB,IAAI,CAACC,MAAM,CAAC,CAAC,CAACR,QAAQ,CAAC,EAAE,CAAC,CAACS,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,EACrDa,MAAM,CACT,CAAC,CACL,CAAE,MAAOjD,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C;AACA,MAAO,EAAE,CACX,CACF,CAAC,CAED,KAAM,CAAAoD,OAAOA,CAACX,cAAc,CAAEI,KAAK,CAAEC,KAAK,CAAE,CAC1C,KAAM,CAAAO,OAAO,CAAG,KAAM,KAAI,CAACb,IAAI,CAACC,cAAc,CAAE,CAAEzE,KAAK,CAAE,CAAC,CAAE6E,KAAK,CAAES,QAAQ,CAAE,IAAI,CAAER,KAAM,CAAC,CAAE,CAAC,CAAC,CAC9F,MAAO,CAAAO,OAAO,CAAC/C,MAAM,CAAG,CAAC,CAAG+C,OAAO,CAAC,CAAC,CAAC,CAAG,IAAI,CAC/C,CAAC,CAED,KAAM,CAAAE,QAAQA,CAACd,cAAc,CAAEU,EAAE,CAAE,CACjC,GAAI,CACF,KAAM,CAAAT,aAAa,CAAG,CACpB,UAAU,CAAE,aAAa,CACzB,MAAM,CAAE,cAAc,CACtB,UAAU,CAAE,oBAAoB,CAChC,OAAO,CAAE,qBAAqB,CAC9B,SAAS,CAAE,YAAY,CACvB,MAAM,CAAE,UAAU,CAClB,OAAO,CAAE,aAAa,CACtB,eAAe,CAAE,qBAAqB,CACtC,cAAc,CAAE,oBAAoB,CACpC,SAAS,CAAE,aAAa,CACxB,SAAS,CAAE,OACb,CAAC,CAED,KAAM,CAAAnB,UAAU,CAAGmB,aAAa,CAACD,cAAc,CAAC,EAAIA,cAAc,CAClE,KAAM,CAAAQ,MAAM,CAAG,KAAM,CAAAhD,SAAS,CAACC,OAAO,aAAAQ,MAAA,CAAaa,UAAU,MAAAb,MAAA,CAAIyC,EAAE,CAAE,CAAC,CAEtE,OAAAD,aAAA,EACEC,EAAE,CAAEF,MAAM,CAACE,EAAE,EACVF,MAAM,EAEb,CAAE,MAAOjD,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,KAAI,CACb,CACF,CAAC,CAED,KAAM,CAAAwD,MAAMA,CAACf,cAAc,CAAEjC,IAAI,CAAE,CACjC,GAAI,CACF,KAAM,CAAAkC,aAAa,CAAG,CACpB,UAAU,CAAE,aAAa,CACzB,MAAM,CAAE,cAAc,CACtB,UAAU,CAAE,oBAAoB,CAChC,OAAO,CAAE,qBAAqB,CAC9B,SAAS,CAAE,YAAY,CACvB,MAAM,CAAE,UAAU,CAClB,OAAO,CAAE,aAAa,CACtB,eAAe,CAAE,qBAAqB,CACtC,cAAc,CAAE,oBAAoB,CACpC,SAAS,CAAE,aAAa,CACxB,SAAS,CAAE,OACb,CAAC,CAED,KAAM,CAAAnB,UAAU,CAAGmB,aAAa,CAACD,cAAc,CAAC,EAAIA,cAAc,CAElE;AACA,KAAM,CAAAgB,UAAU,CAAAP,aAAA,CAAAA,aAAA,IACX1C,IAAI,MACPkD,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAAF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,EACpC,CAED,KAAM,CAAAX,MAAM,CAAG,KAAM,CAAAhD,SAAS,CAAC2B,YAAY,CAACL,UAAU,CAAEkC,UAAU,CAAC,CAEnE,OAAAP,aAAA,EACEC,EAAE,CAAEF,MAAM,CAACE,EAAE,EAAIjB,IAAI,CAACC,MAAM,CAAC,CAAC,CAACR,QAAQ,CAAC,EAAE,CAAC,CAACS,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,EACrDqB,UAAU,EAEjB,CAAE,MAAOzD,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAA8D,MAAMA,CAACrB,cAAc,CAAEU,EAAE,CAAE3C,IAAI,CAAE,CACrC,GAAI,CACF,KAAM,CAAAkC,aAAa,CAAG,CACpB,UAAU,CAAE,aAAa,CACzB,MAAM,CAAE,cAAc,CACtB,UAAU,CAAE,oBAAoB,CAChC,OAAO,CAAE,qBAAqB,CAC9B,SAAS,CAAE,YAAY,CACvB,MAAM,CAAE,UAAU,CAClB,OAAO,CAAE,aAAa,CACtB,eAAe,CAAE,qBAAqB,CACtC,cAAc,CAAE,oBAAoB,CACpC,SAAS,CAAE,aAAa,CACxB,SAAS,CAAE,OACb,CAAC,CAED,KAAM,CAAAnB,UAAU,CAAGmB,aAAa,CAACD,cAAc,CAAC,EAAIA,cAAc,CAElE,KAAM,CAAAsB,UAAU,CAAAb,aAAA,CAAAA,aAAA,IACX1C,IAAI,MACPqD,SAAS,CAAE,GAAI,CAAAF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,EACpC,CAED,KAAM,CAAA3D,SAAS,CAAC4B,YAAY,CAACN,UAAU,CAAE4B,EAAE,CAAEY,UAAU,CAAC,CAExD,OAAAb,aAAA,EACEC,EAAE,EACCY,UAAU,EAEjB,CAAE,MAAO/D,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAgE,MAAMA,CAACvB,cAAc,CAAEU,EAAE,CAAE,CAC/B,GAAI,CACF,KAAM,CAAAT,aAAa,CAAG,CACpB,UAAU,CAAE,aAAa,CACzB,MAAM,CAAE,cAAc,CACtB,UAAU,CAAE,oBAAoB,CAChC,OAAO,CAAE,qBAAqB,CAC9B,SAAS,CAAE,YAAY,CACvB,MAAM,CAAE,UAAU,CAClB,OAAO,CAAE,aAAa,CACtB,eAAe,CAAE,qBAAqB,CACtC,cAAc,CAAE,oBAAoB,CACpC,SAAS,CAAE,aAAa,CACxB,SAAS,CAAE,OACb,CAAC,CAED,KAAM,CAAAnB,UAAU,CAAGmB,aAAa,CAACD,cAAc,CAAC,EAAIA,cAAc,CAClE,KAAM,CAAAxC,SAAS,CAAC8B,YAAY,CAACR,UAAU,CAAE4B,EAAE,CAAC,CAC5C,MAAO,CAAEc,OAAO,CAAE,IAAI,CAAEd,EAAG,CAAC,CAC9B,CAAE,MAAOnD,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CAED;AACA,OAAS7B,aAAa,CAAE8B,SAAS,EAEjC;AACA,OAASR,GAAG,CAAEC,IAAI,CAAEC,EAAE,EAEtB,cAAe,CAAAqC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}